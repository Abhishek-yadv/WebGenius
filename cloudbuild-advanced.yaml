# Advanced Cloud Build Configuration with Multiple Environments

steps:
  # Install dependencies and run tests
  - name: 'python:3.12-slim'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      cd backend
      pip install -r requirements-cloudrun.txt
      # Add your tests here
      # python -m pytest tests/
      echo "Tests passed!"

  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-f', 'Dockerfile.cloudrun', '-t', 'gcr.io/$PROJECT_ID/webscraper-backend:$COMMIT_SHA', '.']
  
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/webscraper-backend:$COMMIT_SHA']
  
  # Deploy to staging (if develop branch)
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      if [ "$BRANCH_NAME" = "develop" ]; then
        gcloud run deploy webscraper-backend-staging \
          --image gcr.io/$PROJECT_ID/webscraper-backend:$COMMIT_SHA \
          --region us-central1 \
          --platform managed \
          --allow-unauthenticated \
          --memory 1Gi \
          --cpu 1 \
          --timeout 300 \
          --set-env-vars "ENVIRONMENT=staging"
      fi

  # Deploy to production (if main branch)
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      if [ "$BRANCH_NAME" = "main" ]; then
        gcloud run deploy webscraper-backend \
          --image gcr.io/$PROJECT_ID/webscraper-backend:$COMMIT_SHA \
          --region us-central1 \
          --platform managed \
          --allow-unauthenticated \
          --memory 2Gi \
          --cpu 2 \
          --timeout 300 \
          --concurrency 10 \
          --max-instances 10 \
          --set-env-vars "ENVIRONMENT=production"
      fi

# Store the image in Container Registry
images:
  - 'gcr.io/$PROJECT_ID/webscraper-backend:$COMMIT_SHA'

# Build options
options:
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: 100
  
# Timeout for the entire build
timeout: '1200s'